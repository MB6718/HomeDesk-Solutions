{
	"info": {
		"_postman_id": "f4d4618f-072c-4d55-b0b3-4bceb8c34c58",
		"name": "HomeDesk Solutions - API Test Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Регистрация/аутентификация пользователя",
			"item": [
				{
					"name": "Регистрация",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be629c73-f173-4439-b278-8e5f52b9bbba",
								"exec": [
									"pm.test(\"Успешная регистрация нового пользователя\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.include({\r",
									"        email: pm.variables.get(\"email\"),\r",
									"        first_name: pm.variables.get(\"first_name\"),\r",
									"        last_name: pm.variables.get(\"last_name\")\r",
									"    });\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"account_id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4706a14a-3085-458f-b8e5-592880d9e2d9",
								"exec": [
									"//const uuid = Math.random().toString(36).substring(2, 15) +\r",
									"//        Math.random().toString(36).substring(2, 15);\r",
									"//const email = \"user_\" + uuid + \"@hds.com\";\r",
									"const email = \"user_\" + _.random(1000) + \"@hds.com\";\r",
									"pm.collectionVariables.set(\"email\", email);\r",
									"const array_first_name = [\"Ivan\", \"Vasili\", \"Max\", \"Tom\", \"Jhon\", \"Jerry\", \"Sofi\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"first_name\",\r",
									"    array_first_name[_.random(array_first_name.length-1)]\r",
									");\r",
									"const array_last_name = [\"Ivanov\", \"Petrov\", \"Bee\", \"Lown\", \"Doe\", \"Brooks\", \"Morso\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"last_name\",\r",
									"    array_last_name[_.random(array_last_name.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\" : \"{{first_name}}\",\r\n    \"last_name\" : \"{{last_name}}\",\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/users",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Регистрация (логин уже существует в БД)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7e46c75-6416-46d8-94b6-5ad70fc86709",
								"exec": [
									"pm.test(\"Успешная обработка ошибки - Такой логин уже используется\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\" : \"{{first_name}}\",\r\n    \"last_name\" :  \"{{last_name}}\",\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/users",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2469ae47-b2dc-4f48-8a8b-5c12270f7a3a",
								"exec": [
									"pm.test(\"Успешная аутентификация пользователя\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{email}}\",\r\n\t\"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Выход",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d92f0d20-e7bc-405a-bbbe-38a6bf86956a",
								"exec": [
									"pm.test(\"Выход произведён успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{localhost}}/auth/logout",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация (Неверный логин)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e9681f1-43bd-4401-94cf-f8c78d3f0198",
								"exec": [
									"pm.test(\"Проверка входа по неверному логину\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"user-loose@ex.ru\",\r\n\t\"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация (Неверный пароль)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f46fe35d-c39a-4dc3-92c5-a33a3a4daf60",
								"exec": [
									"pm.test(\"Проверка входа по неверному паролю\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{email}}\",\r\n\t\"password\" : \"5g465g46fd6\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация (заново, для автотеста)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bac7d7d-c53c-4476-a455-159077111c5f",
								"exec": [
									"pm.test(\"Успешная аутентификация пользователя\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{email}}\",\r\n\t\"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Категории пользователя",
			"item": [
				{
					"name": "Создание коренной категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee315926-2be0-4fbf-b710-1628b1e0a9c3",
								"exec": [
									"pm.test(\"Категория успешно создана\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"еДа\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание коренной категории (уже существующей)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a672279-aab6-4677-8cf4-10ac7f0fdf7d",
								"exec": [
									"pm.test(\"Создание уже существующей категории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"еДа\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание подкатегории",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04fcb536-4e11-4821-8551-995709a07bf7",
								"exec": [
									"pm.test(\"Категория успешно создана\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Протухты\",\r\n    \"parent_id\" : 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание подкатегории (с не сущ. родителем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf2ca56e-c3d3-408b-b247-63bf05ba3e87",
								"exec": [
									"pm.test(\"Категория успешно создана\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"ПыхтачОК\",\r\n    \"parent_id\" : 1001\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76a70b3f-d5e0-4694-b174-3151ca3ec89f",
								"exec": [
									"pm.test(\"Изменение категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Пятёрочка\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории (на уже существующую)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68be45fa-9dd0-4f6c-9300-99039f5ac3c8",
								"exec": [
									"pm.test(\"Изменение категории на уже существующую\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Продукты\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории (меняем вложенность, род. сущ.)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3fe9ce0-2585-455f-adb9-2f2c2acad294",
								"exec": [
									"pm.test(\"Изменение категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"еДа\",\r\n    \"parent_id\" : 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории (меняем вложенность, род.  НЕ сущ.)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e272de2c-c2da-4ecd-b314-5fb25fb244aa",
								"exec": [
									"pm.test(\"Изменение категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"еДа\",\r\n    \"parent_id\" : 1001\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение всех категорий тек. пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cc1b45a-3ec1-4bba-bca2-f37b8d89b391",
								"exec": [
									"pm.test(\"Получение всех категорий пользователя\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить категорию по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2458c9ac-e999-4ecc-b30a-442146f458d3",
								"exec": [
									"pm.test(\"Получение категории по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить категорию по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29eccf45-5533-41e9-bd85-56a66cbf9456",
								"exec": [
									"pm.test(\"Получение категории по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить категорию по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "094848ff-7ab0-42f5-9024-1a495b27faee",
								"exec": [
									"pm.test(\"Получение категории по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/10",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление категории по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bce8c73f-b816-4d9a-bf97-00847f726e38",
								"exec": [
									"pm.test(\"Удаление категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление категории по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e41144a-3490-4de2-8805-e52d279809d7",
								"exec": [
									"pm.test(\"Удаление категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление категории по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc8fe24a-6a1d-4e19-bb6b-4fb7c6836911",
								"exec": [
									"pm.test(\"Удаление категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/10",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"10"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Операции",
			"item": [
				{
					"name": "Создание операции",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db71bca6-46f6-4c22-83f9-cc88801a08b8",
								"exec": [
									"pm.test(\"Операция успешно создана\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2a79d3f5-c16c-45e6-ba75-5d0b431cd463",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание операции (не существ. категория)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9133441-5f9c-446b-b85c-dd18e6b94a57",
								"exec": [
									"pm.test(\"Операция успешно создана\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5cd9e700-33b7-4501-a014-560def65ebab",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : 1001\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение операции по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b840deff-c5d2-482c-b1f5-790edd226c3d",
								"exec": [
									"pm.test(\"Получение операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение операции по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5af4467f-998c-403f-baa0-9754b4c97e17",
								"exec": [
									"pm.test(\"Получение операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение операции по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ad9df3e-faf1-4521-9ed0-269271d00818",
								"exec": [
									"pm.test(\"Получение операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/10",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef1ffb78-2c84-4844-a2fd-65d082c0ca04",
								"exec": [
									"pm.test(\"Изменение операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (не сущ. категория)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3420349c-f192-421f-85b0-85932b201d22",
								"exec": [
									"pm.test(\"Изменение операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"category_id\" : 1001\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0747d3ba-f062-4499-94e1-8bb7952e0db5",
								"exec": [
									"pm.test(\"Изменение операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ef4bf3d-f9f8-4379-9e97-5ef99b1d81b1",
								"exec": [
									"pm.test(\"Изменение операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/10",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление операции по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d724d56-5f61-4481-8faf-32eb89174d61",
								"exec": [
									"pm.test(\"Удаление операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление операции по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "209cc67d-db09-4f43-aa54-d51a443ddc3a",
								"exec": [
									"pm.test(\"Удаление операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление операции по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df1bbfba-b702-45a6-beaf-95b356b4d4ff",
								"exec": [
									"pm.test(\"Удаление операции по ID успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/10",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"10"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9a882ff1-c064-4f6e-8007-07fcb22c1eb0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1e35daab-4308-414e-87e5-44161e3d91c5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Отчёт",
			"item": [
				{
					"name": "Получить отчёт",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a9452e0-2d10-4a33-89c7-2d54118ae3df",
								"exec": [
									"pm.test(\"Получение отчёта успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "792f8631-3de8-49c6-a969-c7dd75966d4a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/report",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"report"
							],
							"query": [
								{
									"key": "from",
									"value": null,
									"disabled": true
								},
								{
									"key": "to",
									"value": null,
									"disabled": true
								},
								{
									"key": "type",
									"value": null,
									"disabled": true
								},
								{
									"key": "category_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "page_size",
									"value": null,
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dfd10397-7d2c-4b15-8e5b-fa8f256402f7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "14533b1b-c69f-44ac-8202-4e838d4b4a70",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c771a052-cf62-4559-a622-8041bb656085",
			"key": "localhost",
			"value": "127.0.0.1:5000",
			"type": "string"
		},
		{
			"id": "37588980-559c-45de-b207-7903db8ed246",
			"key": "basic_password",
			"value": "12345",
			"type": "string"
		},
		{
			"id": "62ebe20c-f2a5-485c-abd4-9cbfa81053ad",
			"key": "email",
			"value": "user_one@hds.com",
			"type": "string"
		},
		{
			"id": "55a8c791-c5e0-4d90-8b0a-bfe511ad1713",
			"key": "first_name",
			"value": "Vasili",
			"type": "string"
		},
		{
			"id": "8d49cd3f-42a9-416b-b946-00ec2a44ae57",
			"key": "last_name",
			"value": "Petrov",
			"type": "string"
		},
		{
			"id": "99101035-6c11-465c-a5bb-470315774b9d",
			"key": "account_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "40adfb31-0ed6-449c-8fa9-0191517817b8",
			"key": "transaction_type",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}