{
	"info": {
		"_postman_id": "e387bbcb-f375-4f49-b654-fe1172729a87",
		"name": "HomeDesk Solutions - API Test Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Регистрация/аутентификация пользователя",
			"item": [
				{
					"name": "Регистрация",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f8191f7-1849-494b-bc8c-4a18637a8234",
								"exec": [
									"pm.test(\"Регистрация нового пользователя\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.include({\r",
									"        email: pm.variables.get(\"email\"),\r",
									"        first_name: pm.variables.get(\"first_name\"),\r",
									"        last_name: pm.variables.get(\"last_name\")\r",
									"    });\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"account_id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "42cf1f67-5225-4ef5-8395-201c23607bfa",
								"exec": [
									"//const uuid = Math.random().toString(36).substring(2, 15) +\r",
									"//        Math.random().toString(36).substring(2, 15);\r",
									"//const email = \"user_\" + uuid + \"@hds.com\";\r",
									"const email = \"user_\" + _.random(1000) + \"@hds.com\";\r",
									"pm.collectionVariables.set(\"email\", email);\r",
									"const array_first_name = [\"Ivan\", \"Vasili\", \"Max\", \"Tom\", \"Jhon\", \"Jerry\", \"Sofi\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"first_name\",\r",
									"    array_first_name[_.random(array_first_name.length-1)]\r",
									");\r",
									"const array_last_name = [\"Ivanov\", \"Petrov\", \"Bee\", \"Lown\", \"Doe\", \"Brooks\", \"Morso\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"last_name\",\r",
									"    array_last_name[_.random(array_last_name.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\" : \"{{first_name}}\",\r\n    \"last_name\" : \"{{last_name}}\",\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/users",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Регистрация (логин уже существует в БД)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6deeed81-244d-4a97-a214-edf67b436432",
								"exec": [
									"pm.test(\"Регистрация - Логин уже используется\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\" : \"{{first_name}}\",\r\n    \"last_name\" :  \"{{last_name}}\",\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/users",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Регистрация (неверные поля запроса)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a703ef7-cb03-4962-aaa6-98c97fe808c1",
								"exec": [
									"pm.test(\"Регистрация - Неверные поля JSON запроса\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\" : \"{{first_name}}\",\r\n    \"last_mame\" :  \"{{last_name}}\",\r\n    \"email\" : \"brbrbr@br@.com\",\r\n    \"pasrwod\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/users",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fb47903-c5dc-4444-a48a-58a927fa7a6a",
								"exec": [
									"pm.test(\"Аутентификация пользователя\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{email}}\",\r\n\t\"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Выход",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "874afe1b-160a-4549-b690-c520eefd0242",
								"exec": [
									"pm.test(\"Выход\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{localhost}}/auth/logout",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация (Неверный логин)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10a9eff5-e4ed-45b0-a16c-84dacd0bb5b6",
								"exec": [
									"pm.test(\"Аутентификация - вход по неверному логину\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"user-loose@ex.ru\",\r\n\t\"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация (Неверный пароль)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98987261-939d-4ac1-805c-70c7acbed07d",
								"exec": [
									"pm.test(\"Аутентификация - вход по неверному паролю\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{email}}\",\r\n\t\"password\" : \"5g465g46fd6\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация (Неверные поля запроса)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6c36363-3b81-43a6-a113-2346a12de1ec",
								"exec": [
									"pm.test(\"Аутентификация - Неверные поля JSON запроса\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"example@mail@.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аутентификация (заново, для автотеста)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b5dfecf-393b-44a2-bcfe-409f615fd614",
								"exec": [
									"pm.test(\"Аутентификация\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\" : \"{{email}}\",\r\n\t\"password\" : \"{{basic_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/auth/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Категории пользователя",
			"item": [
				{
					"name": "Создание коренной категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9468cae2-211c-49b6-9692-348a727a3fb3",
								"exec": [
									"pm.test(\"Cоздание коренной категории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"category_id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"еДа\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание коренной категории (уже существующей)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "697e8598-1957-48b0-9d0d-23c7edcd2a5b",
								"exec": [
									"pm.test(\"Создание уже существующей категории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"еДа\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание подкатегории",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64c0e2f8-7e3e-41c6-8b10-cc59066e5dc9",
								"exec": [
									"pm.test(\"Создание подкатегории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Шашлык\",\r\n    \"parent_id\" : {{category_id}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание подкатегории (с тем же родителем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ecd36e06-0d84-4663-8366-0b9ff20b5657",
								"exec": [
									"pm.test(\"Создание подкатегории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"category_id\", jsonData.subcategory.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Продукты\",\r\n    \"parent_id\" : {{category_id}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание подкатегории (нет прав на родителя)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73df27cf-4eba-473a-a92e-c8455804c801",
								"exec": [
									"pm.test(\"Создание подкатегории - чужой родитель, нет прав\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Яблоки\",\r\n    \"parent_id\" : 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание подкатегории (с не сущ. родителем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14abb32a-8a92-40e0-b9e9-65b7f3965e11",
								"exec": [
									"pm.test(\"Создание подкатегории с несуществующим родителем\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"ПыхтачОК\",\r\n    \"parent_id\" : 1001\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание подподкатегории",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fb859b-4349-4cd7-937a-b8e0bb744829",
								"exec": [
									"pm.test(\"Создание подкатегории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"category_id\", jsonData.subcategory.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Яблоки\",\r\n    \"parent_id\" : {{category_id}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание подподкатегории (с тем же родителем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b71118c3-b6a1-437d-8222-53c6df5a3b22",
								"exec": [
									"pm.test(\"Создание подкатегории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"category_id\", jsonData.subcategory.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "68826da9-15e6-4a3f-8797-0c426e2cb804",
								"exec": [
									"var category_id = pm.collectionVariables.get(\"category_id\")\r",
									"pm.collectionVariables.set(\"category_id\", category_id-1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"БаНаНа\",\r\n    \"parent_id\" : {{category_id}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87c298d4-ddea-4d83-9109-f5086b6fa1e5",
								"exec": [
									"pm.test(\"Изменение категории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Пятёрочка\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/{{category_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории (на уже существующую)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6e97045-2586-4e4e-9cf3-937165c3c34f",
								"exec": [
									"pm.test(\"Изменение категории на уже существующую\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Продукты\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/{{category_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории (меняем вложенность, род. сущ.)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7bd6c3b9-77b8-4c5a-948d-1e7ae853086c",
								"exec": [
									"var category_id = pm.collectionVariables.get(\"category_id\")\r",
									"pm.collectionVariables.set(\"parent_id\", category_id-3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "573fb62d-8345-4407-8a68-fbf450ddc088",
								"exec": [
									"pm.test(\"Изменение категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"parent_id\" : {{parent_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/{{category_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории (меняем вложенность, НЕТ прав)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "512e7c5c-6181-4725-9f91-f12c07df948b",
								"exec": [
									"pm.test(\"Изменение категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"parent_id\" : 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/{{category_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение категории (меняем вложенность, род.  НЕ сущ.)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b0d673d-0330-4eaa-8256-879c9072e041",
								"exec": [
									"pm.test(\"Изменение категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"parent_id\" : 1001\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/categories/{{category_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение всех категорий тек. пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5763a48-08e7-47e2-a276-05089b983785",
								"exec": [
									"pm.test(\"Получение всех категорий пользователя\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить категорию по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0a0cfe9-c536-4f5e-809d-b30ad89c2c9a",
								"exec": [
									"pm.test(\"Получение категории по ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/{{category_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить категорию по ID (имеющ. подкатегории)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cea11c63-7642-49da-aff5-38a9a5a212ee",
								"exec": [
									"pm.test(\"Получение категории по ID - имеющую подкатегории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7fc5fb91-1db2-48b0-ad3d-06d30a562b33",
								"exec": [
									"var category_id = pm.collectionVariables.get(\"category_id\")\r",
									"pm.collectionVariables.set(\"category_id\", category_id-3);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/{{category_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить категорию по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eed4c22d-356e-411b-a488-5e68534aeabd",
								"exec": [
									"pm.test(\"Получение категории по ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить категорию по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "045679cf-c6bd-4db9-9c5d-bec24126b258",
								"exec": [
									"pm.test(\"Получение категории по ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление категории по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b6bd606-4bf8-4a1b-a490-304300a2ef61",
								"exec": [
									"pm.test(\"Удаление категории по ID - Рекрсивно со всеми подгатегориями\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(204);\r",
									"});\r",
									"\r",
									"var category_id = pm.collectionVariables.get(\"category_id\")\r",
									"pm.collectionVariables.set(\"category_id\", category_id-1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fcd5b321-fd29-48e0-acdc-071abe30514e",
								"exec": [
									"var parent_id = pm.collectionVariables.get(\"parent_id\")\r",
									"pm.collectionVariables.set(\"category_id\", parent_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/{{category_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление категории по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea26b091-401b-4ece-bfd8-2b9f8f005b30",
								"exec": [
									"pm.test(\"Удаление категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление категории по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc82e11c-9fdd-4d83-920b-c0ee1b225fe6",
								"exec": [
									"pm.test(\"Удаление категории успешно\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/categories/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Операции",
			"item": [
				{
					"name": "Создание операции",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88befe64-dbe2-43c6-b795-2857fdb0cffb",
								"exec": [
									"pm.test(\"Создание операции\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"transaction_id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "956cc860-a322-41f6-823b-d2424695b636",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : {{category_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание операции (неверное тело запроса)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e2eeb49-46b7-409e-8aee-883a9ba02e82",
								"exec": [
									"pm.test(\"Создание операции с неверным телом запроса\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1d7563e1-2b4f-48d0-a58a-9e668834eef5",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"a1b2c3\",\r\n  \"amount\" : \"many\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание операции (без указания категории)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e00d3abd-f31d-4929-906b-f0a7b1920e42",
								"exec": [
									"pm.test(\"Создание операции без указания категории\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"transaction_id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "38ad375a-26ed-4ad1-a8ef-a0d0fa7cab57",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание операции (с ID 0 категорией)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39704225-eb2d-4802-a315-f731e4ce782e",
								"exec": [
									"pm.test(\"Создание операции с ID 0 категорией\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4118fa6b-339e-47cd-9a24-2e232d016570",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание операции (не существ. категория)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c023af6b-3699-4a72-b2db-29a1a1610b6e",
								"exec": [
									"pm.test(\"Создание операции с не существующей категорией\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8dd14021-c26d-419e-b777-dbd87d5e1de2",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : 1001\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание операции (нет прав на категорию)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "106450fd-9d84-4c62-a749-8f170679a0f0",
								"exec": [
									"pm.test(\"Создание операции с отсутсвующими правами на категорию\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2a0cb2be-4213-4731-87f9-3ff159b216f9",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение операции по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15c7e106-b424-4d7a-b58a-4bb3d659daf1",
								"exec": [
									"pm.test(\"Получение операции по ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/{{transaction_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение операции по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27b986fd-2738-4a9a-bb7a-bd773d17cf31",
								"exec": [
									"pm.test(\"Получение операции по не существующему ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение операции по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ae8db7a-99ac-453e-ae9e-dd9c695fe375",
								"exec": [
									"pm.test(\"Получение операции по чужому ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f136081-5cb7-4ba4-85ab-a34bd0602e8c",
								"exec": [
									"pm.test(\"Изменение операции по ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "eaf02ed2-42af-43d8-984b-44c9c61d4206",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : {{category_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/{{transaction_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (некоторые поля)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d939153-211f-4594-a85a-dda7d9585d9d",
								"exec": [
									"pm.test(\"Изменение операции по ID - указаны некоторые поля\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8b570235-99b7-4dfc-b5f9-e31d9240d2dd",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/{{transaction_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (категория ID 0)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4c86538-8ae5-462d-932e-6ebc71eb2036",
								"exec": [
									"pm.test(\"Изменение операции по ID - Указана ID 0 категория\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7421766f-5d5a-4f47-8eb6-dd0ced04261d",
								"exec": [
									"const array_transaction_type = [\"income\", \"expenses\"];\r",
									"pm.collectionVariables.set(\r",
									"    \"transaction_type\",\r",
									"    array_transaction_type[_.random(array_transaction_type.length-1)]\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}},\r\n  \"category_id\" : 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/{{transaction_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99040474-fb4c-43f9-bcd8-7c91c88768fb",
								"exec": [
									"pm.test(\"Изменение операции по не существующему ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (не сущ. категория)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2dcb26e7-54d7-4d83-86b5-c89cec372be6",
								"exec": [
									"pm.test(\"Изменение операции по ID - категория не существует\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"category_id\" : 1001\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/{{transaction_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (нет прав на категорию)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "362c09c2-35f7-4c4e-8215-9ff7ae8b66c2",
								"exec": [
									"pm.test(\"Изменение операции по ID - нет прав на категорию\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"category_id\" : 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/{{transaction_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение операции по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4857227c-4944-4df5-b532-963c492605ea",
								"exec": [
									"pm.test(\"Изменение операции по ID - чужая категория, нет прав\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\" : \"{{transaction_type}}\",\r\n  \"amount\" : \"{{$randomPrice}}\",\r\n  \"comment\" : \"{{$randomLoremWords}}\",\r\n  \"date\" : {{$timestamp}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/transactions/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление операции по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed4b3613-7d25-47b1-a682-1870ca93a406",
								"exec": [
									"pm.test(\"Удаление операции по ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/{{transaction_id}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"{{transaction_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление операции по ID (ID не существует)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29426a40-2b1f-4bfd-bc92-1068249c5907",
								"exec": [
									"pm.test(\"Удаление операции по не существующему ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/1001",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1001"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление операции по ID (не явл. владельцем)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fdc99de-de63-4bb9-b40f-dcb4f5493452",
								"exec": [
									"pm.test(\"Удаление операции по чужому ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/transactions/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4003fa1a-8119-4e61-81e1-928b6166b69d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "35576943-253f-4ddc-846e-cbf77128db81",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Отчёт",
			"item": [
				{
					"name": "Получить отчёт",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed333196-aae9-4d91-aada-6dfc5e53aeef",
								"exec": [
									"pm.test(\"Получение отчёта\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка JSON ответа\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e26a0a10-f2ee-43b6-9d67-924281a6ceb6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/report",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"report"
							],
							"query": [
								{
									"key": "from",
									"value": null,
									"disabled": true
								},
								{
									"key": "to",
									"value": null,
									"disabled": true
								},
								{
									"key": "type",
									"value": null,
									"disabled": true
								},
								{
									"key": "category_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "30",
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5bdfc70a-4583-4ea7-9a7e-4a1ec0049f72",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4f7d2fb7-e6d9-4d15-86c9-f54149b0c2d1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "1afa1edd-9778-46af-bde7-ad485cf1ae35",
			"key": "localhost",
			"value": "127.0.0.1:5000"
		},
		{
			"id": "747067b6-c521-4f1b-ba3f-6f40969bc79f",
			"key": "basic_password",
			"value": "12345"
		},
		{
			"id": "f92cd9dc-9675-4fce-a4f7-9e999e852978",
			"key": "email",
			"value": "user_one@hds.com"
		},
		{
			"id": "2960877b-fe4f-42e4-91f3-f1e802d9a5ed",
			"key": "first_name",
			"value": "Vasili"
		},
		{
			"id": "47d60bf4-529a-4141-96b7-c7bc6d943df6",
			"key": "last_name",
			"value": "Petrov"
		},
		{
			"id": "dc34aaa6-5602-4752-9024-c9a3fcef77cc",
			"key": "account_id",
			"value": "1"
		},
		{
			"id": "9dbf3909-c443-476a-b4fe-f36e0c1a8b86",
			"key": "transaction_type",
			"value": "income"
		},
		{
			"id": "e3061114-9bac-4aa3-897e-c52193f1aab9",
			"key": "transaction_id",
			"value": "1"
		},
		{
			"id": "547f024c-9d8d-4960-89aa-8ecad523d7fb",
			"key": "category_id",
			"value": "1"
		},
		{
			"id": "147b0a54-579c-4bf4-b8d0-b3ffc8cd35cf",
			"key": "parent_id",
			"value": "1"
		}
	],
	"protocolProfileBehavior": {}
}